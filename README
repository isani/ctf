Turn-based capture the flag game for University of Helsinki AI Challenge course

Usage
=====

$ cabal configure
$ cabal build
$ ./dist/build/ctf/ctf config "(cat input_a.txt; cat >/dev/null)" "(cat input_b.txt; cat >/dev/null)"

$ (cd brains; javac Thing RandomWalk)
$ ./dist/build/ctf/ctf config "(cd brains; java RandomWalk)" "(cd brains; java RandomWalk)"

Example input_[ab].txt included.

Input format
============

Description TODO, see input.txt.

Output format
=============

Description TODO, see output.

Config format
=============

The first line should contain a Rules struct in Haskell format.

The rest of the lines should describe the game map, one character per
tile, rows ended by newlines. All lines should be of equal length. The
meanings of the characters are:

'.' - empty
'#' - obstacle
'A' - spawn of team A
'B' - spawn of team B
'a' - flag of team A
'b' - flag of team B

See the provided file "config" for an example.

TODO
====

- timeouts for reading commands
- flag logic (succesful stealing, respawning, etc.)
- more rules (number of rounds, grenade count, grenade cooldown, flag return, etc.)
- map file (maybe included in rule file)



